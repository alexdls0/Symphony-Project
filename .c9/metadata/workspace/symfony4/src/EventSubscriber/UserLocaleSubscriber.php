{"filter":false,"title":"UserLocaleSubscriber.php","tooltip":"/symfony4/src/EventSubscriber/UserLocaleSubscriber.php","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":35,"column":1},"action":"insert","lines":["<?php","","namespace App\\EventSubscriber;","","use Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;","use Symfony\\Component\\HttpFoundation\\Session\\SessionInterface;","use Symfony\\Component\\Security\\Http\\Event\\InteractiveLoginEvent;","use Symfony\\Component\\Security\\Http\\SecurityEvents;","","/**"," * Stores the locale of the user in the session after the"," * login. This can be used by the LocaleSubscriber afterwards."," */","class UserLocaleSubscriber implements EventSubscriberInterface {","","    private $session;","","    public function __construct(SessionInterface $session) {","        $this->session = $session;","    }","","    public function onInteractiveLogin(InteractiveLoginEvent $event) {","        $user = $event->getAuthenticationToken()->getUser();","","        if (null !== $user->getLocale()) {","            $this->session->set('_locale', $user->getLocale());","        }","    }","","    public static function getSubscribedEvents() {","        return [","            SecurityEvents::INTERACTIVE_LOGIN => 'onInteractiveLogin',","        ];","    }","","}"],"id":1}],[{"start":{"row":33,"column":5},"end":{"row":34,"column":0},"action":"remove","lines":["",""],"id":2}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":33,"column":5},"end":{"row":33,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":3,"state":"php-start","mode":"ace/mode/php"}},"timestamp":1559149345312,"hash":"90354bb2ff2ccf0724cb0e8e2061fdd838b84add"}