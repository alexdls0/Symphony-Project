security:
    encoders:
        App\Entity\Usuario:
            algorithm: argon2i


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\Usuario
                property: apodo
        # used to reload user from session & other features (e.g. switch_user)
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            
            form_login:
                login_path: /login
                check_path: /login
                default_target_path: /
                always_use_default_target_path: true
                username_parameter: apodo
                password_parameter: password
                csrf_token_generator: security.csrf.token_manager
            
            logout:
                    path:   /logout
                    target: /
                    
            ##Check if active
            user_checker: App\Security\UsuarioChecker

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    #access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
    access_control:    
        - { path: ^/admin, roles: ROLE_ADMIN }
        #- { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY } ESTO SE VER√Å